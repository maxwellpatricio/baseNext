Next.js
	É um framework do React(React é uma lib JS para front-end)
	Já tem rotas para utilizar no front-end
	Tem como criar rotas para API
	Principal diferença entre React/SapUI5 para o Next	
		O SSR (Server Side Rendering): O Next precisa de um servidor/execitador com o Node. 
		Quando o cliente (navegador) acessa a pagina, o node é responsavel por fazer a montagem do HTML, fazendo o que for necessario para isso (consultar API, BD...).
		Somente apos a montagem do HTML, é que ele retorna isso para o cliente (navegador). Após isso, o nagevador faz o seu trabalho normal(ler html, baixar assets, executar js, e exibir o render);
		Mudam itens como TTFB (Time to first byte), FCB (fisrt content paint), TTI (time to interact);
		É como se ele fizesse o 'Build' do react a cada acesso
		Tudo que esta dentro do Src é um server component. Monta do lado do servidor.
		
		PAREI EM 1H:10
		
		
	Babel
		Transpoe o JSX para a compreensão do codigo no nagevador
	Webpack
		Junta o codigo do cliente e do servidor para ser utilizado na hora da execução
		O webpack tem os loaders, que tiram a necessidade de execução do Babel via codigo. Com isso eliminamos algumas etapas/pastas e ele nos gera o build normalmente
		Ainda sim seria necessario que apos toda alteração, fosse gerado um novo build.
		Com isso usamos o webpack-dev-server, ele inicia um server pra gente, compilando e atualizando o arquivo no navegador automaticamento.
	
	Temos 2 formas de criar os componentes:
		Class (componente de classe)
		Function (componente funcional)
			Mais simples e mais moderna de se utilizar os componentes
		
		Todo componente deve começar com a primeira letra maiuscula
		Uma boa pratica é o nome do arquivo ter o mesmo nome do componente/função. Ex App/App.jsx, Login/Login.tsx, List/List.tsx
			Qual a diferença do arquivo .js/.ts para o .jsx/.tsx? Nenhuma, somente uma identificação antiga para saber que se tratava de um projeto React. 
		Props
			recebemos na criação da função
			Definimos o nome na utilização do componente
			São somente para consumo
		State
			Basicamente um setter e getter
			Utilizado para o React/Next entender a atualização necessaria em um componente. Ex: Lista de logs, se eu somente atualizo o array que recebi, o React não vai atualizar a tela.
			Importante utilizar o prevState e não ...array, pois com o prev state o react consegue fazer um simples controle de atualização
		